// @url http://stackoverflow.com/questions/363681/generating-random-integers-in-a-specific-range

import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

// we want ints within this range
int min = 10;
int max = 100;

// Prior to 1.7 you would do this:
long seed = 10; // System.currentTimeMillis()
Random rand = new Random(seed);
int randomA = rand.nextInt((max - min) + 1) + min;
Dump(randomA);
// http://docs.oracle.com/javase/8/docs/api/java/util/Random.html#nextInt-int-


// Since 1.7 we can use ThreadLocalRandom - faster
// @url http://java-performance.info/java-util-random-java-util-concurrent-threadlocalrandom-multithreaded-environments/
int randomB = ThreadLocalRandom.current().nextInt(min, max + 1);


// Math.random() can also be used but is not recommended
// as for historical reasons it's slow and not very "random"
double random = Math.random() * 50 + 1;